#!/bin/bash
set -ex

# Installation:
#
#   1) Make sure you can execute "jupyter lab" on the remote server after logging in
#   2) On your local machine, put this script in a folder that's on your path.
#      I use ~/bin.
#   3) Make the script executable: chmod +x ~/bin/remotejupyter
#
# Usage:
#
#  remotejupyter username@server
#
# For example, I use "remotejupyter cdg4@scotty.princeton.edu"
#
# Author: Daniel Greenidge <daniel@danielgreenidge.com>

# SSH alias of the server on which you want to run the Jupyter notebook
SERVER_ALIAS=$1

# Enable ssh multiplexing
SSH_OPTIONS="-o ControlMaster=auto -o ControlPath=$TMPDIR%r@%h-%p \
-o ControlPersist=600"

# Start ssh master connection
ssh $SSH_OPTIONS -fN $SERVER_ALIAS

# Find an unused port on the remote server
JUPYTERLAB_PORT=$(ssh $SSH_OPTIONS $SERVER_ALIAS "\
JUPYTERLAB_PORT=8888;\
until [ -z \"\$(netstat -atn | grep 127.0.0.1.\$JUPYTERLAB_PORT)\" ]; do\
    JUPYTERLAB_PORT=\$((JUPYTERLAB_PORT + 1));\
done;\
echo \$JUPYTERLAB_PORT")

# Spin up Jupyter Lab in a background tmux session on the remote server
UNIQUE_SESSION_NAME="jupyterlab-$(uuidgen)"
ssh $SSH_OPTIONS -t -t -f $SERVER_ALIAS "\
tmux new -d -s \"$UNIQUE_SESSION_NAME\" \"jupyter lab --port=$JUPYTERLAB_PORT\""

# Establish an ssh tunnel
ssh $SSH_OPTIONS -L $JUPYTERLAB_PORT:localhost:$JUPYTERLAB_PORT $SERVER_ALIAS &

# Log in to the remote server's tmux session
ssh $SSH_OPTIONS -t $SERVER_ALIAS "tmux attach -t $UNIQUE_SESSION_NAME"

# Clean up the control master connection and all slaves
ssh $SSH_OPTIONS -O exit $SERVER_ALIAS
